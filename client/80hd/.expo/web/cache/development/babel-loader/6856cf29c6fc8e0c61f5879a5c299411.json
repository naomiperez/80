{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar _ref = width < height ? [width, height] : [height, width],\n    _ref2 = _slicedToArray(_ref, 2),\n    shortDimension = _ref2[0],\n    longDimension = _ref2[1];\n\nvar guidelineBaseWidth = 350;\nvar guidelineBaseHeight = 680;\nexport var scale = function scale(size) {\n  return shortDimension / guidelineBaseWidth * size;\n};\nexport var verticalScale = function verticalScale(size) {\n  return longDimension / guidelineBaseHeight * size;\n};\nexport var moderateScale = function moderateScale(size) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  return size + (scale(size) - size) * factor;\n};\nexport var moderateVerticalScale = function moderateVerticalScale(size) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  return size + (verticalScale(size) - size) * factor;\n};\nexport var s = scale;\nexport var vs = verticalScale;\nexport var ms = moderateScale;\nexport var mvs = moderateVerticalScale;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/node_modules/react-native-size-matters/lib/scaling-utils.js"],"names":["Dimensions","get","width","height","shortDimension","longDimension","guidelineBaseWidth","guidelineBaseHeight","scale","size","verticalScale","moderateScale","factor","moderateVerticalScale","s","vs","ms","mvs"],"mappings":";;;AAEA,sBAA0BA,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AACA,WAAwCD,KAAK,GAAGC,MAAR,GAAiB,CAACD,KAAD,EAAQC,MAAR,CAAjB,GAAmC,CAACA,MAAD,EAASD,KAAT,CAA3E;AAAA;AAAA,IAAOE,cAAP;AAAA,IAAuBC,aAAvB;;AAGA,IAAMC,kBAAkB,GAAG,GAA3B;AACA,IAAMC,mBAAmB,GAAG,GAA5B;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI;AAAA,SAAIL,cAAc,GAAGE,kBAAjB,GAAsCG,IAA1C;AAAA,CAAlB;AACP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAD,IAAI;AAAA,SAAIJ,aAAa,GAAGE,mBAAhB,GAAsCE,IAA1C;AAAA,CAA1B;AACP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACF,IAAD;AAAA,MAAOG,MAAP,uEAAgB,GAAhB;AAAA,SAAwBH,IAAI,GAAG,CAACD,KAAK,CAACC,IAAD,CAAL,GAAcA,IAAf,IAAuBG,MAAtD;AAAA,CAAtB;AACP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACJ,IAAD;AAAA,MAAOG,MAAP,uEAAgB,GAAhB;AAAA,SAAwBH,IAAI,GAAG,CAACC,aAAa,CAACD,IAAD,CAAb,GAAsBA,IAAvB,IAA+BG,MAA9D;AAAA,CAA9B;AAEP,OAAO,IAAME,CAAC,GAAGN,KAAV;AACP,OAAO,IAAMO,EAAE,GAAGL,aAAX;AACP,OAAO,IAAMM,EAAE,GAAGL,aAAX;AACP,OAAO,IAAMM,GAAG,GAAGJ,qBAAZ","sourcesContent":["import { Dimensions } from 'react-native';\n\nconst { width, height } = Dimensions.get('window');\nconst [shortDimension, longDimension] = width < height ? [width, height] : [height, width];\n\n//Default guideline sizes are based on standard ~5\" screen mobile device\nconst guidelineBaseWidth = 350;\nconst guidelineBaseHeight = 680;\n\nexport const scale = size => shortDimension / guidelineBaseWidth * size;\nexport const verticalScale = size => longDimension / guidelineBaseHeight * size;\nexport const moderateScale = (size, factor = 0.5) => size + (scale(size) - size) * factor;\nexport const moderateVerticalScale = (size, factor = 0.5) => size + (verticalScale(size) - size) * factor;\n\nexport const s = scale;\nexport const vs = verticalScale;\nexport const ms = moderateScale;\nexport const mvs = moderateVerticalScale;"]},"metadata":{},"sourceType":"module"}