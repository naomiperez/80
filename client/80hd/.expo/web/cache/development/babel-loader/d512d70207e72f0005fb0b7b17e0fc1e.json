{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/app/80hd/node_modules/react-native-onboarding-swiper/src/buttons/DoneButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport React from 'react';\nimport { BUTTON_SIZE, MARGIN_RIGHT, getDefaultStyle } from \"./util\";\nimport SymbolButton from \"./SymbolButton\";\n\nvar DoneButton = function (_React$Component) {\n  _inherits(DoneButton, _React$Component);\n\n  var _super = _createSuper(DoneButton);\n\n  function DoneButton() {\n    var _this;\n\n    _classCallCheck(this, DoneButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fadeAnim: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(DoneButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        Animated.timing(_this2.state.fadeAnim, {\n          toValue: 1,\n          duration: 1000,\n          useNativeDriver: true\n        }).start();\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLight = _this$props.isLight,\n          rest = _objectWithoutProperties(_this$props, [\"isLight\"]);\n\n      var fadeAnim = this.state.fadeAnim;\n      return React.createElement(Animated.View, {\n        style: {\n          opacity: fadeAnim\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, React.createElement(SymbolButton, _extends({\n        size: BUTTON_SIZE,\n        textStyle: getDefaultStyle(isLight),\n        style: {\n          borderRadius: BUTTON_SIZE / 2,\n          backgroundColor: 'rgba(255, 255, 255, 0.10)',\n          margin: MARGIN_RIGHT\n        }\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), \"\\u2713\"));\n    }\n  }]);\n\n  return DoneButton;\n}(React.Component);\n\nexport default DoneButton;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/app/80hd/node_modules/react-native-onboarding-swiper/src/buttons/DoneButton.js"],"names":["React","BUTTON_SIZE","MARGIN_RIGHT","getDefaultStyle","SymbolButton","DoneButton","state","fadeAnim","Animated","Value","setTimeout","timing","toValue","duration","useNativeDriver","start","props","isLight","rest","opacity","borderRadius","backgroundColor","margin","Component"],"mappings":";;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,eAApC;AACA,OAAOC,YAAP;;IAEMC,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB;AADJ,K;;;;;;WAIR,6BAAoB;AAAA;;AAClBC,MAAAA,UAAU,CAAC,YAAM;AACfF,QAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAI,CAACL,KAAL,CAAWC,QAA3B,EAAqC;AACnCK,UAAAA,OAAO,EAAE,CAD0B;AAEnCC,UAAAA,QAAQ,EAAE,IAFyB;AAGnCC,UAAAA,eAAe,EAAE;AAHkB,SAArC,EAIGC,KAJH;AAKD,OANS,EAMP,IANO,CAAV;AAOD;;;WAED,kBAAS;AACP,wBAA6B,KAAKC,KAAlC;AAAA,UAAQC,OAAR,eAAQA,OAAR;AAAA,UAAoBC,IAApB;;AACA,UAAQX,QAAR,GAAqB,KAAKD,KAA1B,CAAQC,QAAR;AAEA,aACE,oBAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE;AACLY,UAAAA,OAAO,EAAEZ;AADJ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAEN,WADR;AAEE,QAAA,SAAS,EAAEE,eAAe,CAACc,OAAD,CAF5B;AAGE,QAAA,KAAK,EAAE;AACLG,UAAAA,YAAY,EAAEnB,WAAW,GAAG,CADvB;AAELoB,UAAAA,eAAe,EAAE,2BAFZ;AAGLC,UAAAA,MAAM,EAAEpB;AAHH;AAHT,SAQMgB,IARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF;AAoBD;;;;EAvCsBlB,KAAK,CAACuB,S;;AA0C/B,eAAelB,UAAf","sourcesContent":["import { Animated } from 'react-native';\nimport React from 'react';\n\nimport { BUTTON_SIZE, MARGIN_RIGHT, getDefaultStyle } from './util';\nimport SymbolButton from './SymbolButton';\n\nclass DoneButton extends React.Component {\n  state = {\n    fadeAnim: new Animated.Value(0),\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      Animated.timing(this.state.fadeAnim, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true,\n      }).start();\n    }, 1000);\n  }\n\n  render() {\n    const { isLight, ...rest } = this.props;\n    const { fadeAnim } = this.state;\n\n    return (\n      <Animated.View\n        style={{\n          opacity: fadeAnim,\n        }}\n      >\n        <SymbolButton\n          size={BUTTON_SIZE}\n          textStyle={getDefaultStyle(isLight)}\n          style={{\n            borderRadius: BUTTON_SIZE / 2,\n            backgroundColor: 'rgba(255, 255, 255, 0.10)',\n            margin: MARGIN_RIGHT,\n          }}\n          {...rest}\n        >\n          âœ“\n        </SymbolButton>\n      </Animated.View>\n    );\n  }\n}\n\nexport default DoneButton;\n"]},"metadata":{},"sourceType":"module"}