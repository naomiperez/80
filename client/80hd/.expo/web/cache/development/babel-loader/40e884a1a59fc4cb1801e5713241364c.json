{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/client/80hd/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport OnboardingSwiper from \"./src/components/OnboardingSwiper\";\nimport Home from \"./src/containers/Home\";\nimport Login from \"./src/containers/LoginScreen/Login\";\nimport Registration from \"./src/containers/RegistrationScreen/Registration\";\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from \"./src/firebase/config\";\nvar Stack = createStackNavigator();\n\nfunction App() {\n  var _useState = useState({\n    value: undefined,\n    loading: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    console.log(\"useEffect called\");\n    var db = firebase.firestore();\n    var usersRef = db.collection('users');\n\n    if (usersRef.length <= 0) {\n      console.log(\"Collection does not exist\");\n    } else {\n      console.log(\"Collection exists\");\n    }\n\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setUser({\n            value: userData,\n            loading: false\n          });\n        }).catch(function (error) {\n          console.log(\"Error: \" + error);\n        });\n      } else {\n        console.log(\"User is null\");\n        setUser({\n          value: undefined,\n          loading: false\n        });\n      }\n    });\n  }, []);\n\n  if (user.loading) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, \"loading...\");\n  } else {\n    return React.createElement(NavigationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, user ? React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      initialParams: {\n        'user': user.value\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n      name: \"Onboarding\",\n      component: OnboardingSwiper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Registration\",\n      component: Registration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }))));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/App.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","OnboardingSwiper","Home","Login","Registration","firebase","firebaseConfig","Stack","App","value","undefined","loading","user","setUser","console","log","db","firestore","usersRef","collection","length","auth","onAuthStateChanged","doc","uid","get","then","document","userData","data","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text } from \"react-native\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport OnboardingSwiper from './src/components/OnboardingSwiper'\nimport Home from './src/containers/Home'\nimport Login from './src/containers/LoginScreen/Login'\nimport Registration from './src/containers/RegistrationScreen/Registration'\nimport firebase from \"firebase/app\"\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport { firebaseConfig } from './src/firebase/config'\n\nconst Stack = createStackNavigator()\n\n// Use Stack Navigator to navigate to various pages in app\nfunction App() {\n  const [user, setUser] = useState({ value: undefined, loading: true })\n\n  useEffect(() => {\n    console.log(\"useEffect called\");\n\n    const db = firebase.firestore();\n    const usersRef = db.collection('users');\n\n    if (usersRef.length <= 0) {\n      console.log(\"Collection does not exist\")\n    } else {\n      console.log(\"Collection exists\")\n    }\n\n    // returns the currently logged in user\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // fetch all the extra user data that we stored in Firestore\n        // and set it on the current componentâ€™s state\n        usersRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data()\n            setUser({ value: userData, loading: false })\n          })\n          .catch((error) => {\n            console.log(\"Error: \" + error)\n            // Keep loading rather than showing error\n          });\n      } else {\n        console.log(\"User is null\")\n        setUser({ value: undefined, loading: false })\n      }\n    });\n  }, []);\n\n  /* If returning user, open Home. Else, open onboarding & Login screen */\n  if (user.loading) {\n    return (\n      <Text>\n        loading...\n      </Text>\n    )\n  } else {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"Home\">\n          {user ? (\n            <Stack.Screen name=\"Home\" component={Home} initialParams={{'user': user.value}} />\n          ) : (\n            <>\n              <Stack.Screen name=\"Onboarding\" component={OnboardingSwiper} />\n              <Stack.Screen name=\"Login\" component={Login} />\n              <Stack.Screen name=\"Registration\" component={Registration} />\n            </>\n          )}\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}