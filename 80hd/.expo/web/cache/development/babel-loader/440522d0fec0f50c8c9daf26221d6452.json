{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/client/80hd/src/CurrentUserContext.js\";\n\nimport React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from \"./src/firebase/config\";\nexport var CurrentUserContext = React.createContext();\nexport var CurrentUserProvider = function CurrentUserProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentUser = _React$useState2[0],\n      setCurrentUser = _React$useState2[1];\n\n  var fetchCurrentUser = function fetchCurrentUser() {\n    var db = firebase.firestore();\n    var usersRef = db.collection('users');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setCurrentUser(userData);\n          console.log('CurrentUserContext: ' + userData.fullName);\n        }).catch(function (error) {\n          console.log('Error: ' + error);\n        });\n      } else {\n        console.log('User is null');\n        setCurrentUser(null);\n      }\n    });\n  };\n\n  return React.createElement(CurrentUserContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      fetchCurrentUser: fetchCurrentUser\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport var useCurrentUser = function useCurrentUser() {\n  return React.useContext(CurrentUserContext);\n};","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/src/CurrentUserContext.js"],"names":["React","firebase","firebaseConfig","CurrentUserContext","createContext","CurrentUserProvider","children","useState","currentUser","setCurrentUser","fetchCurrentUser","db","firestore","usersRef","collection","auth","onAuthStateChanged","user","doc","uid","get","then","document","userData","data","console","log","fullName","catch","error","useCurrentUser","useContext"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,cAAT;AAEA,OAAO,IAAMC,kBAAkB,GAAGH,KAAK,CAACI,aAAN,EAA3B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACnD,wBAAsCN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAtC;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAMC,EAAE,GAAGV,QAAQ,CAACW,SAAT,EAAX;AACA,QAAMC,QAAQ,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAjB;AAGAb,IAAAA,QAAQ,CAACc,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC3C,UAAIA,IAAJ,EAAU;AAGRJ,QAAAA,QAAQ,CACLK,GADH,CACOD,IAAI,CAACE,GADZ,EAEGC,GAFH,GAGGC,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClB,cAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AACAf,UAAAA,cAAc,CAACc,QAAD,CAAd;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBH,QAAQ,CAACI,QAA9C;AACD,SAPH,EAQGC,KARH,CAQS,UAACC,KAAD,EAAW;AAChBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAYG,KAAxB;AACD,SAVH;AAWD,OAdD,MAcO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAjB,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,KAnBD;AAoBD,GAzBD;;AA2BA,SACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAW,EAAXA,WAAF;AAAeE,MAAAA,gBAAgB,EAAhBA;AAAf,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CAnCM;AAqCP,OAAO,IAAMwB,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM9B,KAAK,CAAC+B,UAAN,CAAiB5B,kBAAjB,CAAN;AAAA,CAAvB","sourcesContent":["import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from './src/firebase/config';\n\nexport const CurrentUserContext = React.createContext();\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = React.useState(null);\n\n  const fetchCurrentUser = () => {\n    const db = firebase.firestore();\n    const usersRef = db.collection('users');\n\n    // returns the currently logged in user\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // fetch all the extra user data that we stored in Firestore\n        // and set it on the current componentâ€™s state\n        usersRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data();\n            setCurrentUser(userData);\n            console.log('CurrentUserContext: ' + userData.fullName);\n          })\n          .catch((error) => {\n            console.log('Error: ' + error);\n          });\n      } else {\n        console.log('User is null');\n        setCurrentUser(null);\n      }\n    });\n  };\n\n  return (\n    <CurrentUserContext.Provider value={{ currentUser, fetchCurrentUser }}>\n      {children}\n    </CurrentUserContext.Provider>\n  );\n};\n\nexport const useCurrentUser = () => React.useContext(CurrentUserContext);\n"]},"metadata":{},"sourceType":"module"}