{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/80hd/src/containers/RegistrationScreen/Registration.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"../LoginScreen/styles\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nfunction Registration(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Login');\n  };\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      console.log(\"Passwords don't match.\");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var data = {\n        id: uid,\n        email: email,\n        fullName: fullName\n      };\n      var db = firebase.firestore();\n      var usersRef = db.collection('users');\n      usersRef.doc(uid).set(data).then(function () {\n        navigation.navigate('Home', {\n          user: data\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../assets/images/icon.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Full Name\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }, \"Create account\")), React.createElement(View, {\n    style: styles.footerView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }, \"Already got an account?\", ' ', React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Log in\")))));\n}\n\nRegistration.propTypes = {\n  navigation: PropTypes.object\n};\nexport default Registration;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/80hd/src/containers/RegistrationScreen/Registration.js"],"names":["React","useState","PropTypes","KeyboardAwareScrollView","styles","firebase","Registration","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onFooterLinkPress","navigate","onRegisterPress","console","log","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","db","firestore","usersRef","collection","doc","set","catch","error","alert","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport PropTypes from 'prop-types'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport styles from '../LoginScreen/styles'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nfunction Registration({ navigation }) {\n\tconst [fullName, setFullName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [confirmPassword, setConfirmPassword] = useState('')\n\n\tconst onFooterLinkPress = () => {\n\t\tnavigation.navigate('Login')\n\t}\n\n\t// Add new user to database\n\tconst onRegisterPress = () => {\n\t\tif (password !== confirmPassword) {\n\t\t\tconsole.log(\"Passwords don't match.\")\n\t\t\treturn\n\t\t}\n\n\t\t// call Firebase Auth’s createUserWithEmailAndPassword API\n\t\t// to create a new account that will show up in Firebase Console\n\n\t\t// store the user data in Firebase Firestore\n\t\t// (necessary for storing extra user information, such as full name, profile photo URL, and so on, which cannot be stored in the Authentication table)\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.createUserWithEmailAndPassword(email, password)\n\t\t\t.then((response) => {\n\t\t\t\tconst uid = response.user.uid\n\t\t\t\tconst data = {\n\t\t\t\t\tid: uid,\n\t\t\t\t\temail: email,\n\t\t\t\t\tfullName: fullName,\n\t\t\t\t}\n\n\t\t\t\tconst db = firebase.firestore()\n\t\t\t\tconst usersRef = db.collection('users')\n\t\t\t\tusersRef\n\t\t\t\t\t.doc(uid)\n\t\t\t\t\t.set(data)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t// If registration was successful, we navigate to the Home Screen, by passing in the user object data as well\n\t\t\t\t\t\tnavigation.navigate('Home', { user: data })\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t// If error occurs, show an alert with it\n\t\t\t\t\t\talert(error)\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\talert(error)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<KeyboardAwareScrollView\n\t\t\t\tstyle={{ flex: 1, width: '100%' }}\n\t\t\t\tkeyboardShouldPersistTaps='always'>\n\t\t\t\t<Image\n\t\t\t\t\tstyle={styles.logo}\n\t\t\t\t\tsource={require('../../assets/images/icon.png')}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholder='Full Name'\n\t\t\t\t\tplaceholderTextColor='#aaaaaa'\n\t\t\t\t\tonChangeText={(text) => setFullName(text)}\n\t\t\t\t\tvalue={fullName}\n\t\t\t\t\tunderlineColorAndroid='transparent'\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholder='E-mail'\n\t\t\t\t\tplaceholderTextColor='#aaaaaa'\n\t\t\t\t\tonChangeText={(text) => setEmail(text)}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tunderlineColorAndroid='transparent'\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholderTextColor='#aaaaaa'\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\tonChangeText={(text) => setPassword(text)}\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tunderlineColorAndroid='transparent'\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholderTextColor='#aaaaaa'\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\tonChangeText={(text) => setConfirmPassword(text)}\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tunderlineColorAndroid='transparent'\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t/>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tonPress={() => onRegisterPress()}>\n\t\t\t\t\t<Text style={styles.buttonTitle}>Create account</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<View style={styles.footerView}>\n\t\t\t\t\t<Text style={styles.footerText}>\n\t\t\t\t\t\tAlready got an account?{' '}\n\t\t\t\t\t\t<Text onPress={onFooterLinkPress} style={styles.footerLink}>\n\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</KeyboardAwareScrollView>\n\t\t</View>\n\t)\n}\n\nRegistration.propTypes = {\n\tnavigation: PropTypes.object,\n}\n\nexport default Registration\n"]},"metadata":{},"sourceType":"module"}