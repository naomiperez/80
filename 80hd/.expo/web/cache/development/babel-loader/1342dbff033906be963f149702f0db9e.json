{"ast":null,"code":"var _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/client/80hd/src/containers/Home.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Calendar from \"../modules/calendar/Calendar\";\nimport Mood from \"../components/Mood\";\nimport Theme from \"../styles/colors\";\nimport LoggerView from \"../components/LoggerView\";\nimport firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar today = new Date().toDateString();\nvar moodInit = 10;\nvar user = {\n  name: 'Naomi'\n};\n\nfunction Home(props) {\n  var date;\n  var mood;\n  var user = props.user;\n  var db = firebase.firestore();\n\n  function logMood(mood) {\n    console.log(\"Mood: \" + mood + \" Date: \" + date);\n    var todayDoc;\n    collectionRef.where(\"timestamp\", \"==\", date).get().then(function (querySnapshot) {\n      if (querySnapshot.docs.length === 0) {\n        console.log(\"no Documents from today\");\n        var data = {\n          date: date,\n          mood: mood,\n          weekday: date.getDay(),\n          user: user\n        };\n        collectionRef.add(data);\n      } else if (querySnapshot.docs.length > 1) {\n        console.log(\"More than one document from today\");\n      }\n\n      todayDoc = querySnapshot.docs[0];\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n\n    if (todayDoc) {\n      todayDoc.update({\n        mood: mood\n      }).then(function () {\n        console.log(\"Document successfully updated\");\n      }).catch(function (error) {\n        console.error(\"Error updating document: \", error);\n      });\n    } else {\n      console.log(\"Something went wrong with collection/doc query.\");\n    }\n  }\n\n  function logDate(obj) {\n    console.log(obj.date);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Calendar, {\n    date: date,\n    logDate: logDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), React.createElement(LoggerView, {\n    selector: React.createElement(Mood, {\n      mood: mood,\n      logMood: logMood,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 35\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Theme.cream\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/src/containers/Home.js"],"names":["React","useState","Calendar","Mood","Theme","LoggerView","firebase","today","Date","toDateString","moodInit","user","name","Home","props","date","mood","db","firestore","logMood","console","log","todayDoc","collectionRef","where","get","then","querySnapshot","docs","length","data","weekday","getDay","add","catch","error","update","logDate","obj","styles","container","StyleSheet","create","flex","backgroundColor","cream"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Calendar from '../modules/calendar/Calendar'\nimport Mood from '../components/Mood'\nimport Theme from '../styles/colors'\nimport LoggerView from '../components/LoggerView'\nimport firebase from \"firebase/app\"\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst today = new Date().toDateString();\nconst moodInit = 10;\n\nconst user = {\n    name: 'Naomi'\n}\n\nfunction Home(props) {\n    // Use state variables to store date and mood\n    // const [mood, setMood] = useState(moodInit)\n    // const [date, setDate] = useState(today)\n    let date;\n    let mood;\n\n    const user = props.user\n    const db = firebase.firestore()\n\n    function logMood(mood) {\n        console.log(`Mood: ${mood} Date: ${date}`)\n\n\n        // If user has already logged something today, then get the document\n        // with today's date from the 'moodLog' Firestore collection\n        let todayDoc;\n\n        collectionRef.where(\"timestamp\", \"==\", date).get()\n            .then((querySnapshot) => {\n                if (querySnapshot.docs.length === 0) {\n                    console.log(\"no Documents from today\")\n                    // Create new data for day and add it as a document\n                    let data = {\n                        date: date,\n                        mood: mood,\n                        weekday: date.getDay(),\n                        user: user\n                    }\n\n                    collectionRef.add(data);\n                } else if (querySnapshot.docs.length > 1) {\n                    console.log(\"More than one document from today\")\n                }\n\n                todayDoc = querySnapshot.docs[0]\n                //  id & data properties\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n\n        // If we are changing the mood that was previously logged \n        // i.e. (document for today already exists)\n        if (todayDoc) {\n            todayDoc.update({\n                mood: mood\n            }).then(() => {\n                console.log(\"Document successfully updated\");\n            }).catch((error) => {\n                // The document probably doesn't exist.\n                console.error(\"Error updating document: \", error);\n            });\n        } else {\n            console.log(\"Something went wrong with collection/doc query.\")\n        }\n    }\n\n    function logDate(obj) {\n        console.log(obj.date)\n        // setDate(obj.date)\n    }\n\n    return (\n\n        <View style={styles.container}>\n            {/* import the context and pass along the data */}\n            <Calendar date={date} logDate={logDate} />\n            <LoggerView selector={<Mood mood={mood} logMood={logMood} />} />\n        </View>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: Theme.cream\n    }\n});\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}