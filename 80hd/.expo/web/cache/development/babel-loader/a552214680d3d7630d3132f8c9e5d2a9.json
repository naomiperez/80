{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport FirestoreDocumentSnapshot from \"./FirestoreDocumentSnapshot\";\nvar TYPE_MAP = {\n  a: 'added',\n  m: 'modified',\n  r: 'removed'\n};\n\nvar FirestoreDocumentChange = function () {\n  function FirestoreDocumentChange(firestore, nativeData) {\n    _classCallCheck(this, FirestoreDocumentChange);\n\n    this._firestore = firestore;\n    this._nativeData = nativeData;\n    this._isMetadataChange = nativeData.isMetadataChange;\n  }\n\n  _createClass(FirestoreDocumentChange, [{\n    key: \"doc\",\n    get: function get() {\n      return new FirestoreDocumentSnapshot(this._firestore, this._nativeData.doc);\n    }\n  }, {\n    key: \"newIndex\",\n    get: function get() {\n      return this._nativeData.ni;\n    }\n  }, {\n    key: \"oldIndex\",\n    get: function get() {\n      return this._nativeData.oi;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return TYPE_MAP[this._nativeData.type];\n    }\n  }]);\n\n  return FirestoreDocumentChange;\n}();\n\nexport { FirestoreDocumentChange as default };","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/node_modules/@react-native-firebase/firestore/lib/FirestoreDocumentChange.js"],"names":["FirestoreDocumentSnapshot","TYPE_MAP","a","m","r","FirestoreDocumentChange","firestore","nativeData","_firestore","_nativeData","_isMetadataChange","isMetadataChange","doc","ni","oi","type"],"mappings":";;AAiBA,OAAOA,yBAAP;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,CAAC,EAAE,OADY;AAEfC,EAAAA,CAAC,EAAE,UAFY;AAGfC,EAAAA,CAAC,EAAE;AAHY,CAAjB;;IAMqBC,uB;AACnB,mCAAYC,SAAZ,EAAuBC,UAAvB,EAAmC;AAAA;;AACjC,SAAKC,UAAL,GAAkBF,SAAlB;AACA,SAAKG,WAAL,GAAmBF,UAAnB;AACA,SAAKG,iBAAL,GAAyBH,UAAU,CAACI,gBAApC;AACD;;;;SAED,eAAU;AACR,aAAO,IAAIX,yBAAJ,CAA8B,KAAKQ,UAAnC,EAA+C,KAAKC,WAAL,CAAiBG,GAAhE,CAAP;AACD;;;SAED,eAAe;AACb,aAAO,KAAKH,WAAL,CAAiBI,EAAxB;AACD;;;SAED,eAAe;AACb,aAAO,KAAKJ,WAAL,CAAiBK,EAAxB;AACD;;;SAED,eAAW;AACT,aAAOb,QAAQ,CAAC,KAAKQ,WAAL,CAAiBM,IAAlB,CAAf;AACD;;;;;;SArBkBV,uB","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport FirestoreDocumentSnapshot from './FirestoreDocumentSnapshot';\n\nconst TYPE_MAP = {\n  a: 'added',\n  m: 'modified',\n  r: 'removed',\n};\n\nexport default class FirestoreDocumentChange {\n  constructor(firestore, nativeData) {\n    this._firestore = firestore;\n    this._nativeData = nativeData;\n    this._isMetadataChange = nativeData.isMetadataChange;\n  }\n\n  get doc() {\n    return new FirestoreDocumentSnapshot(this._firestore, this._nativeData.doc);\n  }\n\n  get newIndex() {\n    return this._nativeData.ni;\n  }\n\n  get oldIndex() {\n    return this._nativeData.oi;\n  }\n\n  get type() {\n    return TYPE_MAP[this._nativeData.type];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}