{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/client/80hd/src/containers/SleepSelector/Sleep.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Slider from '@react-native-community/slider';\nimport styles from \"./styles\";\n\nfunction SleepSelector(props) {\n  var _useState = useState(props.hours),\n      _useState2 = _slicedToArray(_useState, 2),\n      hours = _useState2[0],\n      setHours = _useState2[1];\n\n  function logHoursSlept(hours) {\n    var hoursFormatted = hours.toFixed(1) * 10;\n    setHours(hoursFormatted);\n    console.log('Hours in sleep component: ' + hoursFormatted);\n    props.logSleep(hoursFormatted);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, hours.toFixed(1) * 1, \" hours\"), React.createElement(Slider, {\n    value: hours / 10,\n    step: 0.1,\n    style: styles.slider,\n    onValueChange: function onValueChange(x) {\n      return logHoursSlept(x);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default SleepSelector;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/src/containers/SleepSelector/Sleep.js"],"names":["React","useState","Slider","styles","SleepSelector","props","hours","setHours","logHoursSlept","hoursFormatted","toFixed","console","log","logSleep","text","slider","x"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP;;AAIA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,kBAA0BJ,QAAQ,CAACI,KAAK,CAACC,KAAP,CAAlC;AAAA;AAAA,MAAOA,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,aAAT,CAAuBF,KAAvB,EAA8B;AAC5B,QAAIG,cAAc,GAAGH,KAAK,CAACI,OAAN,CAAc,CAAd,IAAmB,EAAxC;AACAH,IAAAA,QAAQ,CAACE,cAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BH,cAA3C;AACAJ,IAAAA,KAAK,CAACQ,QAAN,CAAeJ,cAAf;AAED;;AAED,SACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACW,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BR,KAAK,CAACI,OAAN,CAAc,CAAd,IAAmB,CAA9C,WADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEJ,KAAK,GAAG,EADjB;AAEE,IAAA,IAAI,EAAE,GAFR;AAGE,IAAA,KAAK,EAAEH,MAAM,CAACY,MAHhB;AAIE,IAAA,aAAa,EAAE,uBAACC,CAAD;AAAA,aAAOR,aAAa,CAACQ,CAAD,CAApB;AAAA,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAaD;;AAED,eAAeZ,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport styles from './styles';\n\n/* I may have to implement something where I retreive that day's Mood info to display when user clicks on it */\n\nfunction SleepSelector(props) {\n  const [hours, setHours] = useState(props.hours);\n\n  function logHoursSlept(hours) {\n    let hoursFormatted = hours.toFixed(1) * 10;\n    setHours(hoursFormatted);\n    console.log('Hours in sleep component: ' + hoursFormatted);\n    props.logSleep(hoursFormatted);\n    // Log hours slept to parent (Home) component\n  }\n\n  return (\n    <>\n      <View>\n        <Text style={styles.text}>{hours.toFixed(1) * 1} hours</Text>\n        <Slider\n          value={hours / 10}\n          step={0.1}\n          style={styles.slider}\n          onValueChange={(x) => logHoursSlept(x)}\n        />\n      </View>\n    </>\n  );\n}\n\nexport default SleepSelector;\n"]},"metadata":{},"sourceType":"module"}