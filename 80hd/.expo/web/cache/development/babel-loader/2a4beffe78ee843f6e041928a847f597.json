{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/client/80hd/src/containers/LoginScreen/Login.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from \"../../firebase/config\";\nimport { CurrentUserProvider, useCurrentUser } from \"../../CurrentUserContext\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useCurrentUser = useCurrentUser(),\n      currentUser = _useCurrentUser.currentUser,\n      fetchCurrentUser = _useCurrentUser.fetchCurrentUser;\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Registration');\n  };\n\n  var onLoginPress = function onLoginPress() {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var usersRef = firebase.firestore().collection('users');\n      console.log(usersRef);\n      usersRef.doc(uid).get().then(function (firestoreDocument) {\n        if (!firestoreDocument.exists) {\n          alert('User does not exist anymore.');\n          return;\n        }\n\n        var user = firestoreDocument.data();\n        navigation.navigate('Home');\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: styles.scroll,\n    keyboardShouldPersistTaps: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../assets/images/icon.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onLoginPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Log in\")), React.createElement(View, {\n    style: styles.footerView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Don't have an account?\", ' ', React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Sign up\")))));\n}","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/src/containers/LoginScreen/Login.js"],"names":["React","useState","KeyboardAwareScrollView","styles","firebase","firebaseConfig","CurrentUserProvider","useCurrentUser","Login","navigation","email","setEmail","password","setPassword","currentUser","fetchCurrentUser","onFooterLinkPress","navigate","onLoginPress","auth","signInWithEmailAndPassword","then","response","uid","user","usersRef","firestore","collection","console","log","doc","get","firestoreDocument","exists","alert","data","catch","error","container","scroll","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"mappings":"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","sourcesContent":["// import { firebase } from '../../firebase/config'\nimport React, { useState } from 'react';\nimport { Image, Text, TextInput, TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from './styles';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from '../../firebase/config';\nimport { CurrentUserProvider, useCurrentUser } from '../../CurrentUserContext';\n\nexport default function Login({ navigation }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { currentUser, fetchCurrentUser } = useCurrentUser();\n\n  const onFooterLinkPress = () => {\n    navigation.navigate('Registration');\n  };\n\n  const onLoginPress = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        const uid = response.user.uid;\n        const usersRef = firebase.firestore().collection('users');\n        console.log(usersRef);\n        usersRef\n          .doc(uid)\n          .get()\n          .then((firestoreDocument) => {\n            if (!firestoreDocument.exists) {\n              alert('User does not exist anymore.');\n              return;\n            }\n            const user = firestoreDocument.data();\n            navigation.navigate('Home');\n          })\n          .catch((error) => {\n            alert(error);\n          });\n      })\n      .catch((error) => {\n        alert(error);\n      });\n  };\n\n  /* TODO: Put styling in a separate file */\n  return (\n    <View style={styles.container}>\n      <KeyboardAwareScrollView style={styles.scroll} keyboardShouldPersistTaps=\"always\">\n        <Image style={styles.logo} source={require('../../assets/images/icon.png')} />\n        <TextInput\n          style={styles.input}\n          placeholder=\"E-mail\"\n          placeholderTextColor=\"#aaaaaa\"\n          onChangeText={(text) => setEmail(text)}\n          value={email}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n        />\n        <TextInput\n          style={styles.input}\n          placeholderTextColor=\"#aaaaaa\"\n          secureTextEntry\n          placeholder=\"Password\"\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n        />\n        <TouchableOpacity style={styles.button} onPress={() => onLoginPress()}>\n          <Text style={styles.buttonTitle}>Log in</Text>\n        </TouchableOpacity>\n        <View style={styles.footerView}>\n          <Text style={styles.footerText}>\n            Don't have an account?{' '}\n            <Text onPress={onFooterLinkPress} style={styles.footerLink}>\n              Sign up\n            </Text>\n          </Text>\n        </View>\n      </KeyboardAwareScrollView>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}