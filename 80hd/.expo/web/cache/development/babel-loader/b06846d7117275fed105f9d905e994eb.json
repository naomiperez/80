{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/80hd/node_modules/react-native-calendar-strip/src/CalendarHeader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./Calendar.style.js\";\n\nvar CalendarHeader = function (_Component) {\n  _inherits(CalendarHeader, _Component);\n\n  var _super = _createSuper(CalendarHeader);\n\n  function CalendarHeader() {\n    _classCallCheck(this, CalendarHeader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CalendarHeader, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return JSON.stringify(this.props) !== JSON.stringify(nextProps);\n    }\n  }, {\n    key: \"formatCalendarHeader\",\n    value: function formatCalendarHeader(calendarHeaderFormat) {\n      if (!this.props.weekStartDate || !this.props.weekEndDate) {\n        return \"\";\n      }\n\n      var firstDay = this.props.weekStartDate;\n      var lastDay = this.props.weekEndDate;\n      var monthFormatting = \"\";\n\n      if ((calendarHeaderFormat.match(/Mo/g) || []).length > 0) {\n        monthFormatting = \"Mo\";\n      } else {\n        if ((calendarHeaderFormat.match(/M/g) || []).length > 0) {\n          for (var i = (calendarHeaderFormat.match(/M/g) || []).length; i > 0; i--) {\n            monthFormatting += \"M\";\n          }\n        }\n      }\n\n      if (firstDay.month() === lastDay.month()) {\n        return firstDay.format(calendarHeaderFormat);\n      } else if (firstDay.year() !== lastDay.year()) {\n        return firstDay.format(calendarHeaderFormat) + \" / \" + lastDay.format(calendarHeaderFormat);\n      }\n\n      return (monthFormatting.length > 1 ? firstDay.format(monthFormatting) : \"\") + \" \" + (monthFormatting.length > 1 ? \"/\" : \"\") + \" \" + lastDay.format(calendarHeaderFormat);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          calendarHeaderFormat = _this$props.calendarHeaderFormat,\n          onHeaderSelected = _this$props.onHeaderSelected,\n          calendarHeaderContainerStyle = _this$props.calendarHeaderContainerStyle,\n          calendarHeaderStyle = _this$props.calendarHeaderStyle,\n          fontSize = _this$props.fontSize,\n          allowHeaderTextScaling = _this$props.allowHeaderTextScaling,\n          _weekStartDate = _this$props.weekStartDate,\n          _weekEndDate = _this$props.weekEndDate,\n          headerText = _this$props.headerText;\n\n      var _headerText = headerText || this.formatCalendarHeader(calendarHeaderFormat);\n\n      var weekStartDate = _weekStartDate && _weekStartDate.clone();\n\n      var weekEndDate = _weekEndDate && _weekEndDate.clone();\n\n      return React.createElement(TouchableOpacity, {\n        onPress: onHeaderSelected && onHeaderSelected.bind(this, {\n          weekStartDate: weekStartDate,\n          weekEndDate: weekEndDate\n        }),\n        disabled: !onHeaderSelected,\n        style: calendarHeaderContainerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.calendarHeader, {\n          fontSize: fontSize\n        }, calendarHeaderStyle],\n        allowFontScaling: allowHeaderTextScaling,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, _headerText));\n    }\n  }]);\n\n  return CalendarHeader;\n}(Component);\n\nCalendarHeader.propTypes = {\n  calendarHeaderFormat: PropTypes.string.isRequired,\n  calendarHeaderContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  calendarHeaderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  weekStartDate: PropTypes.object,\n  weekEndDate: PropTypes.object,\n  allowHeaderTextScaling: PropTypes.bool,\n  fontSize: PropTypes.number,\n  headerText: PropTypes.string,\n  onHeaderSelected: PropTypes.func\n};\nexport default CalendarHeader;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/80hd/node_modules/react-native-calendar-strip/src/CalendarHeader.js"],"names":["React","Component","PropTypes","styles","CalendarHeader","nextProps","JSON","stringify","props","calendarHeaderFormat","weekStartDate","weekEndDate","firstDay","lastDay","monthFormatting","match","length","i","month","format","year","onHeaderSelected","calendarHeaderContainerStyle","calendarHeaderStyle","fontSize","allowHeaderTextScaling","_weekStartDate","_weekEndDate","headerText","_headerText","formatCalendarHeader","clone","bind","calendarHeader","propTypes","string","isRequired","oneOfType","object","number","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Text, TouchableOpacity } from \"react-native\";\r\n\r\nimport styles from \"./Calendar.style.js\";\r\n\r\nclass CalendarHeader extends Component {\r\n  static propTypes = {\r\n    calendarHeaderFormat: PropTypes.string.isRequired,\r\n    calendarHeaderContainerStyle: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.number\r\n    ]),\r\n    calendarHeaderStyle: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.number\r\n    ]),\r\n    weekStartDate: PropTypes.object,\r\n    weekEndDate: PropTypes.object,\r\n    allowHeaderTextScaling: PropTypes.bool,\r\n    fontSize: PropTypes.number,\r\n    headerText: PropTypes.string,\r\n    onHeaderSelected: PropTypes.func,\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return JSON.stringify(this.props) !== JSON.stringify(nextProps);\r\n  }\r\n\r\n  //Function that formats the calendar header\r\n  //It also formats the month section if the week is in between months\r\n  formatCalendarHeader(calendarHeaderFormat) {\r\n    if (!this.props.weekStartDate || !this.props.weekEndDate) {\r\n      return \"\";\r\n    }\r\n\r\n    const firstDay = this.props.weekStartDate;\r\n    const lastDay = this.props.weekEndDate;\r\n    let monthFormatting = \"\";\r\n    //Parsing the month part of the user defined formating\r\n    if ((calendarHeaderFormat.match(/Mo/g) || []).length > 0) {\r\n      monthFormatting = \"Mo\";\r\n    } else {\r\n      if ((calendarHeaderFormat.match(/M/g) || []).length > 0) {\r\n        for (\r\n          let i = (calendarHeaderFormat.match(/M/g) || []).length;\r\n          i > 0;\r\n          i--\r\n        ) {\r\n          monthFormatting += \"M\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (firstDay.month() === lastDay.month()) {\r\n      return firstDay.format(calendarHeaderFormat);\r\n    } else if (firstDay.year() !== lastDay.year()) {\r\n      return `${firstDay.format(calendarHeaderFormat)} / ${lastDay.format(\r\n        calendarHeaderFormat\r\n      )}`;\r\n    }\r\n\r\n    return `${\r\n      monthFormatting.length > 1 ? firstDay.format(monthFormatting) : \"\"\r\n    } ${monthFormatting.length > 1 ? \"/\" : \"\"} ${lastDay.format(\r\n      calendarHeaderFormat\r\n    )}`;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      calendarHeaderFormat,\r\n      onHeaderSelected,\r\n      calendarHeaderContainerStyle,\r\n      calendarHeaderStyle,\r\n      fontSize,\r\n      allowHeaderTextScaling,\r\n      weekStartDate: _weekStartDate,\r\n      weekEndDate: _weekEndDate,\r\n      headerText,\r\n    } = this.props;\r\n    const _headerText = headerText || this.formatCalendarHeader(calendarHeaderFormat);\r\n    const weekStartDate = _weekStartDate && _weekStartDate.clone();\r\n    const weekEndDate = _weekEndDate && _weekEndDate.clone();\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={onHeaderSelected && onHeaderSelected.bind(this, {weekStartDate, weekEndDate})}\r\n        disabled={!onHeaderSelected}\r\n        style={calendarHeaderContainerStyle}\r\n      >\r\n        <Text\r\n          style={[\r\n            styles.calendarHeader,\r\n            { fontSize: fontSize },\r\n            calendarHeaderStyle\r\n          ]}\r\n          allowFontScaling={allowHeaderTextScaling}\r\n        >\r\n          {_headerText}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalendarHeader;\r\n"]},"metadata":{},"sourceType":"module"}