{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/80hd/src/containers/LoginScreen/Login.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from \"../../firebase/config\";\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Registration');\n  };\n\n  var onLoginPress = function onLoginPress() {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var usersRef = firebase.firestore().collection('users');\n      console.log(usersRef);\n      usersRef.doc(uid).get().then(function (firestoreDocument) {\n        if (!firestoreDocument.exists) {\n          console.log('User does not exist anymore.');\n          return;\n        }\n\n        var user = firestoreDocument.data();\n        navigation.navigate('Home');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: styles.scroll,\n    keyboardShouldPersistTaps: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../assets/images/icon.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onLoginPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, \"Log in\")), React.createElement(View, {\n    style: styles.footerView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, \"Don't have an account?\", ' ', React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Sign up\")))));\n}\n\nLogin.propTypes = {\n  navigation: PropTypes.object\n};\nexport default Login;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/80hd/src/containers/LoginScreen/Login.js"],"names":["React","useState","PropTypes","KeyboardAwareScrollView","styles","firebase","firebaseConfig","Login","navigation","email","setEmail","password","setPassword","onFooterLinkPress","navigate","onLoginPress","auth","signInWithEmailAndPassword","then","response","uid","user","usersRef","firestore","collection","console","log","doc","get","firestoreDocument","exists","data","catch","error","container","scroll","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink","propTypes","object"],"mappings":"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","sourcesContent":["// import { firebase } from '../../firebase/config'\nimport React, { useState } from 'react'\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport PropTypes from 'prop-types'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport styles from './styles'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport { firebaseConfig } from '../../firebase/config'\n\nfunction Login({ navigation }) {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst onFooterLinkPress = () => {\n\t\tnavigation.navigate('Registration')\n\t}\n\n\tconst onLoginPress = () => {\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.signInWithEmailAndPassword(email, password)\n\t\t\t.then((response) => {\n\t\t\t\tconst uid = response.user.uid\n\t\t\t\tconst usersRef = firebase.firestore().collection('users')\n\t\t\t\tconsole.log(usersRef)\n\t\t\t\tusersRef\n\t\t\t\t\t.doc(uid)\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((firestoreDocument) => {\n\t\t\t\t\t\tif (!firestoreDocument.exists) {\n\t\t\t\t\t\t\tconsole.log('User does not exist anymore.')\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst user = firestoreDocument.data()\n\t\t\t\t\t\tnavigation.navigate('Home')\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.log(error)\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t}\n\n\t/* TODO: Put styling in a separate file */\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<KeyboardAwareScrollView\n\t\t\t\tstyle={styles.scroll}\n\t\t\t\tkeyboardShouldPersistTaps='always'>\n\t\t\t\t<Image\n\t\t\t\t\tstyle={styles.logo}\n\t\t\t\t\tsource={require('../../assets/images/icon.png')}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholder='E-mail'\n\t\t\t\t\tplaceholderTextColor='#aaaaaa'\n\t\t\t\t\tonChangeText={(text) => setEmail(text)}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tunderlineColorAndroid='transparent'\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\tplaceholderTextColor='#aaaaaa'\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\tonChangeText={(text) => setPassword(text)}\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tunderlineColorAndroid='transparent'\n\t\t\t\t\tautoCapitalize='none'\n\t\t\t\t/>\n\t\t\t\t<TouchableOpacity style={styles.button} onPress={() => onLoginPress()}>\n\t\t\t\t\t<Text style={styles.buttonTitle}>Log in</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t<View style={styles.footerView}>\n\t\t\t\t\t<Text style={styles.footerText}>\n\t\t\t\t\t\tDon't have an account?{' '}\n\t\t\t\t\t\t<Text onPress={onFooterLinkPress} style={styles.footerLink}>\n\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</KeyboardAwareScrollView>\n\t\t</View>\n\t)\n}\n\nLogin.propTypes = {\n\tnavigation: PropTypes.object,\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}