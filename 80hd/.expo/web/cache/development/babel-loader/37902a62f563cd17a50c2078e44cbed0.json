{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/80hd/src/containers/SleepSelector/Sleep.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport Slider from '@react-native-community/slider';\nimport styles from \"./styles\";\n\nfunction SleepSelector(props) {\n  var _useState = useState(props.hours),\n      _useState2 = _slicedToArray(_useState, 2),\n      hours = _useState2[0],\n      setHours = _useState2[1];\n\n  function logHoursSlept(hours) {\n    var hoursFormatted = hours.toFixed(1) * 10;\n    setHours(hoursFormatted);\n    console.log('Hours in sleep component: ' + hoursFormatted);\n    props.logSleep(hoursFormatted);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, hours.toFixed(1) * 1, \" hours\"), React.createElement(Slider, {\n    value: hours / 10,\n    step: 0.1,\n    style: styles.slider,\n    onValueChange: function onValueChange(x) {\n      return logHoursSlept(x);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  })));\n}\n\nSleepSelector.propTypes = {\n  hours: PropTypes.number,\n  logSleep: PropTypes.func\n};\nexport default SleepSelector;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/80hd/src/containers/SleepSelector/Sleep.js"],"names":["React","useState","PropTypes","Slider","styles","SleepSelector","props","hours","setHours","logHoursSlept","hoursFormatted","toFixed","console","log","logSleep","text","slider","x","propTypes","number","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP;;AAIA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,kBAA0BL,QAAQ,CAACK,KAAK,CAACC,KAAP,CAAlC;AAAA;AAAA,MAAOA,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,aAAT,CAAuBF,KAAvB,EAA8B;AAC7B,QAAIG,cAAc,GAAGH,KAAK,CAACI,OAAN,CAAc,CAAd,IAAmB,EAAxC;AACAH,IAAAA,QAAQ,CAACE,cAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BH,cAA3C;AACAJ,IAAAA,KAAK,CAACQ,QAAN,CAAeJ,cAAf;AAEA;;AAED,SACC,0CACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACW,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BR,KAAK,CAACI,OAAN,CAAc,CAAd,IAAmB,CAA9C,WADD,EAEC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAEJ,KAAK,GAAG,EADhB;AAEC,IAAA,IAAI,EAAE,GAFP;AAGC,IAAA,KAAK,EAAEH,MAAM,CAACY,MAHf;AAIC,IAAA,aAAa,EAAE,uBAACC,CAAD;AAAA,aAAOR,aAAa,CAACQ,CAAD,CAApB;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,CADD;AAaA;;AAEDZ,aAAa,CAACa,SAAd,GAA0B;AACzBX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,MADQ;AAEzBL,EAAAA,QAAQ,EAAEZ,SAAS,CAACkB;AAFK,CAA1B;AAKA,eAAef,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text } from 'react-native'\nimport PropTypes from 'prop-types'\nimport Slider from '@react-native-community/slider'\nimport styles from './styles'\n\n/* I may have to implement something where I retreive that day's Mood info to display when user clicks on it */\n\nfunction SleepSelector(props) {\n\tconst [hours, setHours] = useState(props.hours)\n\n\tfunction logHoursSlept(hours) {\n\t\tlet hoursFormatted = hours.toFixed(1) * 10\n\t\tsetHours(hoursFormatted)\n\t\tconsole.log('Hours in sleep component: ' + hoursFormatted)\n\t\tprops.logSleep(hoursFormatted)\n\t\t// Log hours slept to parent (Home) component\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<View>\n\t\t\t\t<Text style={styles.text}>{hours.toFixed(1) * 1} hours</Text>\n\t\t\t\t<Slider\n\t\t\t\t\tvalue={hours / 10}\n\t\t\t\t\tstep={0.1}\n\t\t\t\t\tstyle={styles.slider}\n\t\t\t\t\tonValueChange={(x) => logHoursSlept(x)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</>\n\t)\n}\n\nSleepSelector.propTypes = {\n\thours: PropTypes.number,\n\tlogSleep: PropTypes.func,\n}\n\nexport default SleepSelector\n"]},"metadata":{},"sourceType":"module"}