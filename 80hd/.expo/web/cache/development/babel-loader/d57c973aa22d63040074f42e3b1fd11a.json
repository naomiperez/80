{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/client/80hd/src/containers/MoodSelector/Mood.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { mood1, mood2, mood3, mood4, mood5, mood6, mood7 } from \"../../assets/images\";\nimport styles from \"./styles\";\nvar images = new Array(mood1, mood2, mood3, mood4, mood5, mood6, mood7);\nexport function MoodSelectorFrag(props) {\n  var _this = this;\n\n  var _useState = useState(props.mood),\n      _useState2 = _slicedToArray(_useState, 2),\n      pressed = _useState2[0],\n      setPressed = _useState2[1];\n\n  var mood = props.mood,\n      date = props.date;\n  {\n    console.log('Rerendering MoodFrag?');\n  }\n\n  function handleChange(index) {\n    props.logMood(index);\n    setPressed(index);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, images.map(function (img, index) {\n    return React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, React.createElement(TouchableOpacity, {\n      mood: mood,\n      onPress: function onPress() {\n        return handleChange(index);\n      },\n      style: [styles.button, pressed == index ? {\n        backgroundColor: '#ccc7b8'\n      } : {}],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: img,\n      style: styles.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    })), React.createElement(View, {\n      style: styles.buttonSpace,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }))));\n}\n\nfunction moodPropsChanged(prevMood, nextMood) {\n  return prevMood.date == nextMood.date;\n}\n\nvar MoodSelector = React.memo(MoodSelectorFrag, moodPropsChanged);\nexport default MoodSelector;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/src/containers/MoodSelector/Mood.js"],"names":["React","useState","mood1","mood2","mood3","mood4","mood5","mood6","mood7","styles","images","Array","MoodSelectorFrag","props","mood","pressed","setPressed","date","console","log","handleChange","index","logMood","map","img","button","backgroundColor","icon","buttonSpace","moodPropsChanged","prevMood","nextMood","MoodSelector","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,KAA5C,EAAmDC,KAAnD;AACA,OAAOC,MAAP;AAKA,IAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUT,KAAV,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,KAA7C,EAAoDC,KAApD,CAAf;AAEA,OAAO,SAASI,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AACtC,kBAA8BZ,QAAQ,CAACY,KAAK,CAACC,IAAP,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMF,IAAN,GAAqBD,KAArB,CAAMC,IAAN;AAAA,MAAYG,IAAZ,GAAqBJ,KAArB,CAAYI,IAAZ;AAEA;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BR,IAAAA,KAAK,CAACS,OAAN,CAAcD,KAAd;AACAL,IAAAA,UAAU,CAACK,KAAD,CAAV;AACD;;AAED,SACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,MAAM,CAACa,GAAP,CAAW,UAACC,GAAD,EAAMH,KAAN,EAAgB;AAC1B,WACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,IAAI,EAAEP,IADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMM,YAAY,CAACC,KAAD,CAAlB;AAAA,OAFX;AAGE,MAAA,KAAK,EAAE,CAACZ,MAAM,CAACgB,MAAR,EAAgBV,OAAO,IAAIM,KAAX,GAAmB;AAAEK,QAAAA,eAAe,EAAE;AAAnB,OAAnB,GAAoD,EAApE,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEF,GAAf;AAAoB,MAAA,KAAK,EAAEf,MAAM,CAACkB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAOE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAElB,MAAM,CAACmB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD,GAZA,CADH,CADF,CADF,CADF;AAqBD;;AAED,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA6C;AAC3C,SAAOD,QAAQ,CAACb,IAAT,IAAiBc,QAAQ,CAACd,IAAjC;AACD;;AAED,IAAMe,YAAY,GAAGhC,KAAK,CAACiC,IAAN,CAAWrB,gBAAX,EAA6BiB,gBAA7B,CAArB;AACA,eAAeG,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\nimport { mood1, mood2, mood3, mood4, mood5, mood6, mood7 } from '../../assets/images';\nimport styles from './styles';\n\n/* I may have to implement something where I retreive that day's Mood info to display when user clicks on it */\n\n// Mood Card displayed on Home page where user can log daily mood\nconst images = new Array(mood1, mood2, mood3, mood4, mood5, mood6, mood7);\n\nexport function MoodSelectorFrag(props) {\n  const [pressed, setPressed] = useState(props.mood);\n  let { mood, date } = props;\n\n  {\n    console.log('Rerendering MoodFrag?');\n  }\n\n  function handleChange(index) {\n    props.logMood(index);\n    setPressed(index);\n  }\n\n  return (\n    <>\n      <View>\n        <Text>\n          {images.map((img, index) => {\n            return (\n              <React.Fragment key={index}>\n                <TouchableOpacity\n                  mood={mood}\n                  onPress={() => handleChange(index)}\n                  style={[styles.button, pressed == index ? { backgroundColor: '#ccc7b8' } : {}]}>\n                  <Image source={img} style={styles.icon}></Image>\n                </TouchableOpacity>\n                <View style={styles.buttonSpace}></View>\n              </React.Fragment>\n            );\n          })}\n        </Text>\n      </View>\n    </>\n  );\n}\n\nfunction moodPropsChanged(prevMood, nextMood){\n  return prevMood.date == nextMood.date;\n}\n\nconst MoodSelector = React.memo(MoodSelectorFrag, moodPropsChanged);\nexport default MoodSelector;\n"]},"metadata":{},"sourceType":"module"}