{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/client/80hd/node_modules/react-native-ratings/dist/SwipeRating.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport times from \"lodash/times\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar STAR_IMAGE = require(\"./images/star.png\");\n\nvar HEART_IMAGE = require(\"./images/heart.png\");\n\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\n\nvar BELL_IMAGE = require(\"./images/bell.png\");\n\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: \"#f1c40f\",\n    backgroundColor: \"white\"\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: \"#e74c3c\",\n    backgroundColor: \"white\"\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: \"#2ecc71\",\n    backgroundColor: \"white\"\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: \"#f39c12\",\n    backgroundColor: \"white\"\n  },\n  custom: {}\n};\n\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n\n    if (typeof value === \"number\") {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be between 0 and 20\");\n    }\n\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a number\");\n  }\n};\n\nvar SwipeRating = function (_Component) {\n  _inherits(SwipeRating, _Component);\n\n  var _super = _createSuper(SwipeRating);\n\n  function SwipeRating(props) {\n    var _this;\n\n    _classCallCheck(this, SwipeRating);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        onStartRating = _this$props.onStartRating,\n        onSwipeRating = _this$props.onSwipeRating,\n        onFinishRating = _this$props.onFinishRating,\n        fractions = _this$props.fractions;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n\n          var rating = _this.getCurrentRating(tapPositionX);\n\n          if (typeof onStartRating === \"function\") {\n            onStartRating(rating);\n          }\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n\n          var rating = _this.getCurrentRating(tapPositionX);\n\n          if (typeof onSwipeRating === \"function\") {\n            onSwipeRating(rating);\n          }\n        }\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        var rating = _this.getCurrentRating(_this.state.value);\n\n        if (rating >= _this.props.minValue) {\n          if (!fractions) {\n            _this.setCurrentRating(rating);\n          }\n\n          if (typeof onFinishRating === \"function\") {\n            onFinishRating(rating);\n          }\n        }\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position,\n      display: false,\n      isComponentMounted: false\n    };\n    return _this;\n  }\n\n  _createClass(SwipeRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      try {\n        this.setState({\n          display: true,\n          isComponentMounted: true\n        }, function () {\n          return _this2.setCurrentRating(_this2.props.startingValue);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.startingValue !== prevProps.startingValue) {\n        this.setCurrentRating(this.props.startingValue);\n      }\n    }\n  }, {\n    key: \"handleLayoutChange\",\n    value: function handleLayoutChange() {\n      var _this3 = this;\n\n      this.ratingRef.measure(function (fx, fy, width, height, px) {\n        var halfWidth = width / 2;\n        var pageXWithinWindow = px % Dimensions.get(\"window\").width;\n\n        _this3.setState({\n          centerX: pageXWithinWindow + halfWidth\n        });\n      });\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n          imageSize = _this$props2.imageSize,\n          ratingCount = _this$props2.ratingCount,\n          type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: \"clamp\"\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n          imageSize = _this$props3.imageSize,\n          ratingCount = _this$props3.ratingCount,\n          type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: \"clamp\"\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          imageSize = _this$props4.imageSize,\n          ratingCount = _this$props4.ratingCount,\n          type = _this$props4.type,\n          tintColor = _this$props4.tintColor;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.starContainer,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 44\n          }\n        }, React.createElement(Image, {\n          source: source,\n          style: {\n            width: imageSize,\n            height: imageSize,\n            tintColor: tintColor\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 9\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"getCurrentRating\",\n    value: function getCurrentRating(value) {\n      var _this$props5 = this.props,\n          fractions = _this$props5.fractions,\n          imageSize = _this$props5.imageSize,\n          ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = this.props.minValue ? this.props.minValue : 0;\n\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = this.props.minValue ? this.props.minValue : 0;\n      } else if (value <= imageSize || value > imageSize) {\n        var diff = value / imageSize;\n        currentRating = startingValue + diff;\n        currentRating = fractions ? Number(currentRating.toFixed(fractions)) : Math.ceil(currentRating);\n      } else {\n        currentRating = fractions ? Number(startingValue.toFixed(fractions)) : Math.ceil(startingValue);\n      }\n\n      if (this.props.jumpValue > 0 && this.props.jumpValue < this.props.ratingCount) {\n        return Math.ceil(currentRating * (1 / this.props.jumpValue)) / (1 / this.props.jumpValue);\n      } else {\n        return currentRating;\n      }\n    }\n  }, {\n    key: \"setCurrentRating\",\n    value: function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n          imageSize = _this$props6.imageSize,\n          ratingCount = _this$props6.ratingCount;\n      var initialRating = ratingCount / 2;\n      var value = null;\n\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n\n      if (this.state.isComponentMounted) {\n        this.setState({\n          position: newPosition,\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n          ratingCount = _this$props7.ratingCount,\n          type = _this$props7.type,\n          readonly = _this$props7.readonly,\n          showReadOnlyText = _this$props7.showReadOnlyText,\n          ratingTextColor = _this$props7.ratingTextColor;\n      var color = ratingTextColor || TYPES[type].color;\n      return React.createElement(View, {\n        style: styles.showRatingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.ratingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.ratingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }\n      }, \"Rating: \"), React.createElement(Text, {\n        style: [styles.currentRatingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, this.getCurrentRating(this.state.value)), React.createElement(Text, {\n        style: [styles.maxRatingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }, \"/\", ratingCount)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, readonly && showReadOnlyText && React.createElement(Text, {\n        style: [styles.readonlyLabel, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, \"(readonly)\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props8 = this.props,\n          readonly = _this$props8.readonly,\n          type = _this$props8.type,\n          ratingImage = _this$props8.ratingImage,\n          ratingColor = _this$props8.ratingColor,\n          ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n          style = _this$props8.style,\n          showRating = _this$props8.showRating;\n\n      if (type === \"custom\") {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n\n      return this.state.display ? React.createElement(View, {\n        pointerEvents: readonly ? \"none\" : \"auto\",\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, showRating && this.displayCurrentRating(), React.createElement(View, _extends({\n        style: styles.starsWrapper\n      }, this.state.panResponder.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.starsInsideWrapper,\n        onLayout: function onLayout() {\n          _this5.handleLayoutChange();\n        },\n        ref: function ref(view) {\n          _this5.ratingRef = view;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: this.getPrimaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, {\n        style: this.getSecondaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      })), this.renderRatings())) : null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        isComponentMounted: false\n      });\n    }\n  }]);\n\n  return SwipeRating;\n}(Component);\n\nexport { SwipeRating as default };\nSwipeRating.defaultProps = {\n  type: \"star\",\n  ratingImage: STAR_IMAGE,\n  ratingColor: \"#f1c40f\",\n  ratingBackgroundColor: \"white\",\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: 40,\n  minValue: 0,\n  jumpValue: 0\n};\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  starsInsideWrapper: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  showRatingView: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495e\"\n  },\n  readonlyLabel: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 12,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495a\"\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495e\"\n  }\n});","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/node_modules/react-native-ratings/dist/SwipeRating.js"],"names":["React","Component","times","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","custom","fractionsType","props","propName","componentName","value","Error","SwipeRating","onStartRating","onSwipeRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","event","gesture","newPosition","tapPositionX","x0","state","centerX","dx","setValue","x","y","isComponentMounted","setState","rating","getCurrentRating","onPanResponderMove","onPanResponderRelease","minValue","setCurrentRating","display","startingValue","err","console","log","prevProps","ratingRef","measure","fx","fy","width","height","px","halfWidth","pageXWithinWindow","Dimensions","get","imageSize","ratingCount","type","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","tintColor","index","styles","starContainer","currentRating","diff","Number","toFixed","Math","ceil","jumpValue","initialRating","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","displayCurrentRating","starsWrapper","panHandlers","starsInsideWrapper","handleLayoutChange","view","getPrimaryViewStyle","getSecondaryViewStyle","renderRatings","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport times from \"lodash/times\";\nimport { View, Text, Animated, PanResponder, Image, StyleSheet, Platform, Dimensions } from \"react-native\";\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require(\"./images/star.png\");\nconst HEART_IMAGE = require(\"./images/heart.png\");\nconst ROCKET_IMAGE = require(\"./images/rocket.png\");\nconst BELL_IMAGE = require(\"./images/bell.png\");\nconst TYPES = {\n    star: {\n        source: STAR_IMAGE,\n        color: \"#f1c40f\",\n        backgroundColor: \"white\"\n    },\n    heart: {\n        source: HEART_IMAGE,\n        color: \"#e74c3c\",\n        backgroundColor: \"white\"\n    },\n    rocket: {\n        source: ROCKET_IMAGE,\n        color: \"#2ecc71\",\n        backgroundColor: \"white\"\n    },\n    bell: {\n        source: BELL_IMAGE,\n        color: \"#f39c12\",\n        backgroundColor: \"white\"\n    },\n    custom: {}\n};\nconst fractionsType = (props, propName, componentName) => {\n    if (props[propName]) {\n        const value = props[propName];\n        if (typeof value === \"number\") {\n            return value >= 0 && value <= 20 ?\n                null :\n                new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n        }\n        return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n    }\n};\nexport default class SwipeRating extends Component {\n    constructor(props) {\n        super(props);\n        const { onStartRating, onSwipeRating, onFinishRating, fractions } = this.props;\n        const position = new Animated.ValueXY();\n        const panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onPanResponderGrant: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onStartRating === \"function\") {\n                        onStartRating(rating);\n                    }\n                }\n            },\n            onPanResponderMove: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onSwipeRating === \"function\") {\n                        onSwipeRating(rating);\n                    }\n                }\n            },\n            onPanResponderRelease: () => {\n                const rating = this.getCurrentRating(this.state.value);\n                if (rating >= this.props.minValue) {\n                    if (!fractions) {\n                        // 'round up' to the nearest rating image\n                        this.setCurrentRating(rating);\n                    }\n                    if (typeof onFinishRating === \"function\") {\n                        onFinishRating(rating);\n                    }\n                }\n            }\n        });\n        this.state = {\n            panResponder,\n            position,\n            display: false,\n            isComponentMounted: false\n        };\n    }\n    componentDidMount() {\n        try {\n            this.setState({ display: true, isComponentMounted: true }, () => this.setCurrentRating(this.props.startingValue));\n        }\n        catch (err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.startingValue !== prevProps.startingValue) {\n            this.setCurrentRating(this.props.startingValue);\n        }\n    }\n    handleLayoutChange() {\n        // eslint-disable-next-line max-params\n        this.ratingRef.measure((fx, fy, width, height, px) => {\n            const halfWidth = width / 2;\n            const pageXWithinWindow = px % Dimensions.get(\"window\").width;\n            this.setState({\n                centerX: pageXWithinWindow + halfWidth\n            });\n        });\n    }\n    getPrimaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { color } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                0,\n                ratingCount * imageSize / 2,\n                ratingCount * imageSize\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor: color,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    getSecondaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { backgroundColor } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                ratingCount * imageSize,\n                ratingCount * imageSize / 2,\n                0\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    renderRatings() {\n        const { imageSize, ratingCount, type, tintColor } = this.props;\n        const { source } = TYPES[type];\n        return times(ratingCount, index => <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }}/>\n      </View>);\n    }\n    // eslint-disable-next-line max-statements\n    getCurrentRating(value) {\n        const { fractions, imageSize, ratingCount } = this.props;\n        const startingValue = ratingCount / 2;\n        let currentRating = this.props.minValue ? this.props.minValue : 0;\n        if (value > ratingCount * imageSize / 2) {\n            currentRating = ratingCount;\n        }\n        else if (value < -ratingCount * imageSize / 2) {\n            currentRating = this.props.minValue ? this.props.minValue : 0;\n        }\n        else if (value <= imageSize || value > imageSize) {\n            const diff = value / imageSize;\n            currentRating = startingValue + diff;\n            currentRating = fractions ?\n                Number(currentRating.toFixed(fractions)) :\n                Math.ceil(currentRating);\n        }\n        else {\n            currentRating = fractions ?\n                Number(startingValue.toFixed(fractions)) :\n                Math.ceil(startingValue);\n        }\n        if (this.props.jumpValue > 0 &&\n            this.props.jumpValue < this.props.ratingCount) {\n            return (Math.ceil(currentRating * (1 / this.props.jumpValue)) /\n                (1 / this.props.jumpValue));\n        }\n        else {\n            return currentRating;\n        }\n    }\n    // eslint-disable-next-line max-statements\n    setCurrentRating(rating) {\n        const { imageSize, ratingCount } = this.props;\n        // `initialRating` corresponds to `startingValue` in the getter. Naming it\n        // Differently here avoids confusion with `value` below.\n        const initialRating = ratingCount / 2;\n        let value = null;\n        if (rating > ratingCount) {\n            value = ratingCount * imageSize / 2;\n        }\n        else if (rating < 0) {\n            value = -ratingCount * imageSize / 2;\n        }\n        else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n            value = (rating - initialRating) * imageSize;\n        }\n        else {\n            value = 0;\n        }\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: value, y: 0 });\n        if (this.state.isComponentMounted) {\n            this.setState({ position: newPosition, value });\n        }\n    }\n    displayCurrentRating() {\n        const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n        const color = ratingTextColor || TYPES[type].color;\n        return (<View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating: </Text>\n          <Text style={[styles.currentRatingText, { color }]}>\n            {this.getCurrentRating(this.state.value)}\n          </Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>\n          {readonly && showReadOnlyText &&\n                <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}\n        </View>\n      </View>);\n    }\n    render() {\n        const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n        if (type === \"custom\") {\n            const custom = {\n                source: ratingImage,\n                color: ratingColor,\n                backgroundColor: ratingBackgroundColor\n            };\n            TYPES.custom = custom;\n        }\n        return this.state.display ?\n            <View pointerEvents={readonly ? \"none\" : \"auto\"} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper} onLayout={() => {\n                    this.handleLayoutChange();\n                }} ref={view => {\n                    this.ratingRef = view;\n                }}>\n            <Animated.View style={this.getPrimaryViewStyle()}/>\n            <Animated.View style={this.getSecondaryViewStyle()}/>\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n            null;\n    }\n    componentWillUnmount() {\n        this.setState({ isComponentMounted: false });\n    }\n}\nSwipeRating.defaultProps = {\n    type: \"star\",\n    ratingImage: STAR_IMAGE,\n    ratingColor: \"#f1c40f\",\n    ratingBackgroundColor: \"white\",\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0,\n    jumpValue: 0\n};\nconst styles = StyleSheet.create({\n    starsWrapper: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    starsInsideWrapper: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    showRatingView: {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingView: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingText: {\n        fontSize: 15,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    },\n    readonlyLabel: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495a\"\n    },\n    currentRatingText: {\n        fontSize: 30,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null\n    },\n    maxRatingText: {\n        fontSize: 18,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    }\n});\n"]},"metadata":{},"sourceType":"module"}