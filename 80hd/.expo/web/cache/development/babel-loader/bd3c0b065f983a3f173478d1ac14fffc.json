{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/80hd/src/CurrentUserContext.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nexport var CurrentUserContext = React.createContext();\nexport var CurrentUserProvider = function CurrentUserProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentUser = _React$useState2[0],\n      setCurrentUser = _React$useState2[1];\n\n  var fetchCurrentUser = function fetchCurrentUser() {\n    var db = firebase.firestore();\n    var usersRef = db.collection('users');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setCurrentUser(userData);\n          console.log('CurrentUserContext: ' + userData.fullName);\n        }).catch(function (error) {\n          console.log('Error: ' + error);\n        });\n      } else {\n        console.log('User is null');\n        setCurrentUser(null);\n      }\n    });\n  };\n\n  return React.createElement(CurrentUserContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      fetchCurrentUser: fetchCurrentUser\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, children);\n};\nCurrentUserContext.propTypes = {\n  children: PropTypes.element\n};\nexport var useCurrentUser = function useCurrentUser() {\n  return React.useContext(CurrentUserContext);\n};","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/80hd/src/CurrentUserContext.js"],"names":["React","PropTypes","firebase","CurrentUserContext","createContext","CurrentUserProvider","children","useState","currentUser","setCurrentUser","fetchCurrentUser","db","firestore","usersRef","collection","auth","onAuthStateChanged","user","doc","uid","get","then","document","userData","data","console","log","fullName","catch","error","propTypes","element","useCurrentUser","useContext"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAIA,OAAO,IAAMC,kBAAkB,GAAGH,KAAK,CAACI,aAAN,EAA3B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACpD,wBAAsCN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAtC;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC9B,QAAMC,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAX;AACA,QAAMC,QAAQ,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAjB;AAGAZ,IAAAA,QAAQ,CAACa,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC5C,UAAIA,IAAJ,EAAU;AAGTJ,QAAAA,QAAQ,CACNK,GADF,CACMD,IAAI,CAACE,GADX,EAEEC,GAFF,GAGEC,IAHF,CAGO,UAACC,QAAD,EAAc;AACnB,cAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AACAf,UAAAA,cAAc,CAACc,QAAD,CAAd;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBH,QAAQ,CAACI,QAA9C;AACA,SAPF,EAQEC,KARF,CAQQ,UAACC,KAAD,EAAW;AACjBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAYG,KAAxB;AACA,SAVF;AAWA,OAdD,MAcO;AACNJ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAjB,QAAAA,cAAc,CAAC,IAAD,CAAd;AACA;AACD,KAnBD;AAoBA,GAzBD;;AA2BA,SACC,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAW,EAAXA,WAAF;AAAeE,MAAAA,gBAAgB,EAAhBA;AAAf,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,QADF,CADD;AAKA,CAnCM;AAqCPH,kBAAkB,CAAC2B,SAAnB,GAA+B;AAC9BxB,EAAAA,QAAQ,EAAEL,SAAS,CAAC8B;AADU,CAA/B;AAIA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMhC,KAAK,CAACiC,UAAN,CAAiB9B,kBAAjB,CAAN;AAAA,CAAvB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n/* Handles Fetching of user for persistent Login */\n\nexport const CurrentUserContext = React.createContext()\n\nexport const CurrentUserProvider = ({ children }) => {\n\tconst [currentUser, setCurrentUser] = React.useState(null)\n\n\tconst fetchCurrentUser = () => {\n\t\tconst db = firebase.firestore()\n\t\tconst usersRef = db.collection('users')\n\n\t\t// returns the currently logged in user\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\t// fetch all the extra user data that we stored in Firestore\n\t\t\t\t// and set it on the current componentâ€™s state\n\t\t\t\tusersRef\n\t\t\t\t\t.doc(user.uid)\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((document) => {\n\t\t\t\t\t\tconst userData = document.data()\n\t\t\t\t\t\tsetCurrentUser(userData)\n\t\t\t\t\t\tconsole.log('CurrentUserContext: ' + userData.fullName)\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.log('Error: ' + error)\n\t\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tconsole.log('User is null')\n\t\t\t\tsetCurrentUser(null)\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<CurrentUserContext.Provider value={{ currentUser, fetchCurrentUser }}>\n\t\t\t{children}\n\t\t</CurrentUserContext.Provider>\n\t)\n}\n\nCurrentUserContext.propTypes = {\n\tchildren: PropTypes.element,\n}\n\nexport const useCurrentUser = () => React.useContext(CurrentUserContext)\n"]},"metadata":{},"sourceType":"module"}