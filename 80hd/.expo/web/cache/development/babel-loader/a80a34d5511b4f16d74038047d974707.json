{"ast":null,"code":"var _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/80hd/src/navigation/AppNavigator.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport OnboardingSwiper from \"../utilities/OnboardingSwiper/OnboardingSwiper\";\nimport Login from \"../containers/LoginScreen/Login\";\nimport Registration from \"../containers/RegistrationScreen/Registration\";\nimport { CurrentUserProvider, useCurrentUser } from \"../CurrentUserContext\";\nimport HomeNavigation from \"./HomeNavigation\";\nvar Stack = createStackNavigator();\n\nfunction AppNavigator() {\n  var _useCurrentUser = useCurrentUser(),\n      currentUser = _useCurrentUser.currentUser,\n      fetchCurrentUser = _useCurrentUser.fetchCurrentUser;\n\n  React.useEffect(function () {\n    function fetchUser() {\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchCurrentUser());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, []);\n\n  if (typeof currentUser === 'undefined') {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }\n    }, \"loading...\");\n  } else {\n    return React.createElement(CurrentUserProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: \"HomeNavigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, currentUser ? React.createElement(Stack.Screen, {\n      name: \"HomeNavigation\",\n      component: HomeNavigation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n      name: \"OnboardingSwiper\",\n      component: OnboardingSwiper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 8\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Registration\",\n      component: Registration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }\n    }))));\n  }\n}\n\nexport default AppNavigator;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/80hd/src/navigation/AppNavigator.js"],"names":["React","createStackNavigator","OnboardingSwiper","Login","Registration","CurrentUserProvider","useCurrentUser","HomeNavigation","Stack","AppNavigator","currentUser","fetchCurrentUser","useEffect","fetchUser"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,gBAAP;AACA,OAAOC,KAAP;AACA,OAAOC,YAAP;AACA,SAASC,mBAAT,EAA8BC,cAA9B;AACA,OAAOC,cAAP;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AAGA,SAASQ,YAAT,GAAwB;AACvB,wBAA0CH,cAAc,EAAxD;AAAA,MAAQI,WAAR,mBAAQA,WAAR;AAAA,MAAqBC,gBAArB,mBAAqBA,gBAArB;;AAEAX,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACrB,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACOF,gBAAgB,EADvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,GAJD,EAIG,EAJH;;AAOA,MAAI,OAAOD,WAAP,KAAuB,WAA3B,EAAwC;AACvC,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACA,GAFD,MAEO;AACN,WACC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,WAAW,GACX,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,gBAAnB;AAAoC,MAAA,SAAS,EAAEH,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,GAGX,0CACC,oBAAC,KAAD,CAAO,MAAP;AACC,MAAA,IAAI,EAAC,kBADN;AAEC,MAAA,SAAS,EAAEL,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAKC,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,EAMC,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,cAAnB;AAAkC,MAAA,SAAS,EAAEC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CAJF,CADD,CADD;AAkBA;AACD;;AAED,eAAeK,YAAf","sourcesContent":["import React from 'react'\nimport { Text } from 'react-native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport OnboardingSwiper from '../utilities/OnboardingSwiper/OnboardingSwiper'\nimport Login from '../containers/LoginScreen/Login'\nimport Registration from '../containers/RegistrationScreen/Registration'\nimport { CurrentUserProvider, useCurrentUser } from '../CurrentUserContext'\nimport HomeNavigation from './HomeNavigation'\n\nconst Stack = createStackNavigator()\n\n// Use Stack Navigator to navigate to various pages in app\nfunction AppNavigator() {\n\tconst { currentUser, fetchCurrentUser } = useCurrentUser()\n\n\tReact.useEffect(() => {\n\t\tasync function fetchUser() {\n\t\t\tawait fetchCurrentUser()\n\t\t}\n\t}, [])\n\n\t/* If returning user, open Home. Else, open onboarding & Login screen */\n\tif (typeof currentUser === 'undefined') {\n\t\treturn <Text>loading...</Text>\n\t} else {\n\t\treturn (\n\t\t\t<CurrentUserProvider>\n\t\t\t\t<Stack.Navigator initialRouteName='HomeNavigation'>\n\t\t\t\t\t{currentUser ? (\n\t\t\t\t\t\t<Stack.Screen name='HomeNavigation' component={HomeNavigation} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\t\tname='OnboardingSwiper'\n\t\t\t\t\t\t\t\tcomponent={OnboardingSwiper}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Stack.Screen name='Login' component={Login} />\n\t\t\t\t\t\t\t<Stack.Screen name='Registration' component={Registration} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Stack.Navigator>\n\t\t\t</CurrentUserProvider>\n\t\t)\n\t}\n}\n\nexport default AppNavigator\n"]},"metadata":{},"sourceType":"module"}