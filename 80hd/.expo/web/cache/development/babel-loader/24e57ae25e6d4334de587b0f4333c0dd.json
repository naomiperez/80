{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar FirestorePath = function () {\n  function FirestorePath() {\n    var pathComponents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, FirestorePath);\n\n    this._parts = pathComponents;\n  }\n\n  _createClass(FirestorePath, [{\n    key: \"id\",\n    get: function get() {\n      return this._parts.length ? this._parts[this._parts.length - 1] : '';\n    }\n  }, {\n    key: \"isDocument\",\n    get: function get() {\n      return this._parts.length % 2 === 0;\n    }\n  }, {\n    key: \"isCollection\",\n    get: function get() {\n      return this._parts.length % 2 === 1;\n    }\n  }, {\n    key: \"relativeName\",\n    get: function get() {\n      return this._parts.join('/');\n    }\n  }, {\n    key: \"child\",\n    value: function child(relativePath) {\n      return new FirestorePath(this._parts.concat(relativePath.split('/')));\n    }\n  }, {\n    key: \"parent\",\n    value: function parent() {\n      return this._parts.length > 1 ? new FirestorePath(this._parts.slice(0, this._parts.length - 1)) : null;\n    }\n  }], [{\n    key: \"fromName\",\n    value: function fromName(name) {\n      var parts = name.split('/');\n      return new FirestorePath(parts);\n    }\n  }]);\n\n  return FirestorePath;\n}();\n\nexport { FirestorePath as default };","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/node_modules/@react-native-firebase/firestore/lib/FirestorePath.js"],"names":["FirestorePath","pathComponents","_parts","length","join","relativePath","concat","split","slice","name","parts"],"mappings":";;;IAiBqBA,a;AAMnB,2BAAiC;AAAA,QAArBC,cAAqB,uEAAJ,EAAI;;AAAA;;AAC/B,SAAKC,MAAL,GAAcD,cAAd;AACD;;;;SAED,eAAS;AACP,aAAO,KAAKC,MAAL,CAAYC,MAAZ,GAAqB,KAAKD,MAAL,CAAY,KAAKA,MAAL,CAAYC,MAAZ,GAAqB,CAAjC,CAArB,GAA2D,EAAlE;AACD;;;SAED,eAAiB;AACf,aAAO,KAAKD,MAAL,CAAYC,MAAZ,GAAqB,CAArB,KAA2B,CAAlC;AACD;;;SAED,eAAmB;AACjB,aAAO,KAAKD,MAAL,CAAYC,MAAZ,GAAqB,CAArB,KAA2B,CAAlC;AACD;;;SAED,eAAmB;AACjB,aAAO,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,GAAjB,CAAP;AACD;;;WAED,eAAMC,YAAN,EAAoB;AAClB,aAAO,IAAIL,aAAJ,CAAkB,KAAKE,MAAL,CAAYI,MAAZ,CAAmBD,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAnB,CAAlB,CAAP;AACD;;;WAED,kBAAS;AACP,aAAO,KAAKL,MAAL,CAAYC,MAAZ,GAAqB,CAArB,GACH,IAAIH,aAAJ,CAAkB,KAAKE,MAAL,CAAYM,KAAZ,CAAkB,CAAlB,EAAqB,KAAKN,MAAL,CAAYC,MAAZ,GAAqB,CAA1C,CAAlB,CADG,GAEH,IAFJ;AAGD;;;WAjCD,kBAAgBM,IAAhB,EAAsB;AACpB,UAAMC,KAAK,GAAGD,IAAI,CAACF,KAAL,CAAW,GAAX,CAAd;AACA,aAAO,IAAIP,aAAJ,CAAkBU,KAAlB,CAAP;AACD;;;;;;SAJkBV,a","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport default class FirestorePath {\n  static fromName(name) {\n    const parts = name.split('/');\n    return new FirestorePath(parts);\n  }\n\n  constructor(pathComponents = []) {\n    this._parts = pathComponents;\n  }\n\n  get id() {\n    return this._parts.length ? this._parts[this._parts.length - 1] : '';\n  }\n\n  get isDocument() {\n    return this._parts.length % 2 === 0;\n  }\n\n  get isCollection() {\n    return this._parts.length % 2 === 1;\n  }\n\n  get relativeName() {\n    return this._parts.join('/');\n  }\n\n  child(relativePath) {\n    return new FirestorePath(this._parts.concat(relativePath.split('/')));\n  }\n\n  parent() {\n    return this._parts.length > 1\n      ? new FirestorePath(this._parts.slice(0, this._parts.length - 1))\n      : null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}