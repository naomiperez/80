{"ast":null,"code":"var _jsxFileName = \"/Users/naomiperez/Documents/GitHub/80/client/80hd/src/AppNavigator.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport OnboardingSwiper from \"./components/OnboardingSwiper\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/LoginScreen/Login\";\nimport Registration from \"./containers/RegistrationScreen/Registration\";\nimport { CurrentUserProvider, useCurrentUser } from \"./CurrentUserContext\";\nvar Stack = createStackNavigator();\n\nfunction AppNavigator() {\n  var _useCurrentUser = useCurrentUser(),\n      currentUser = _useCurrentUser.currentUser,\n      fetchCurrentUser = _useCurrentUser.fetchCurrentUser;\n\n  React.useEffect(function () {\n    function fetchUser() {\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchCurrentUser());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, []);\n\n  if (typeof currentUser === 'undefined') {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, \"loading...\");\n  } else {\n    return React.createElement(CurrentUserProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, currentUser ? React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n      name: \"Onboarding\",\n      component: OnboardingSwiper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Registration\",\n      component: Registration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }))));\n  }\n}\n\nexport default AppNavigator;","map":{"version":3,"sources":["/Users/naomiperez/Documents/GitHub/80/client/80hd/src/AppNavigator.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","OnboardingSwiper","Home","Login","Registration","CurrentUserProvider","useCurrentUser","Stack","AppNavigator","currentUser","fetchCurrentUser","fetchUser"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,gBAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,YAAP;AACA,SAASC,mBAAT,EAA8BC,cAA9B;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AAGA,SAASQ,YAAT,GAAwB;AACpB,wBAA0CF,cAAc,EAAxD;AAAA,MAAQG,WAAR,mBAAQA,WAAR;AAAA,MAAqBC,gBAArB,mBAAqBA,gBAArB;;AAEAd,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AAElB,aAAea,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAoCD,gBAAgB,EAApD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,GAHD,EAGG,EAHH;;AAMF,MAAI,OAAOD,WAAP,KAAwB,WAA5B,EAAyC;AACvC,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,GAND,MAMO;AACL,WACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WAAW,GACV,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,SAAS,EAAEP,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,GAGV,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,YAAnB;AAAgC,MAAA,SAAS,EAAED,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,SAAS,EAAEE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,cAAnB;AAAkC,MAAA,SAAS,EAAEC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAJJ,CADJ,CADF;AAeD;AACF;;AAED,eAAeI,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text } from \"react-native\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport OnboardingSwiper from './components/OnboardingSwiper'\nimport Home from './containers/Home'\nimport Login from './containers/LoginScreen/Login'\nimport Registration from './containers/RegistrationScreen/Registration'\nimport { CurrentUserProvider, useCurrentUser } from './CurrentUserContext'\n\nconst Stack = createStackNavigator();\n\n// Use Stack Navigator to navigate to various pages in app\nfunction AppNavigator() {\n    const { currentUser, fetchCurrentUser } = useCurrentUser()\n\n    React.useEffect(() => {\n        \n        async function fetchUser () { await fetchCurrentUser()}\n    }, [])\n\n  /* If returning user, open Home. Else, open onboarding & Login screen */\n  if (typeof(currentUser) === 'undefined') {\n    return (\n      <Text>\n        loading...\n      </Text>\n    )\n  } else {\n    return (\n      <CurrentUserProvider>\n          <Stack.Navigator initialRouteName=\"Home\">\n            {currentUser ? (\n              <Stack.Screen name=\"Home\" component={Home} />\n            ) : (\n              <>\n                <Stack.Screen name=\"Onboarding\" component={OnboardingSwiper} />\n                <Stack.Screen name=\"Login\" component={Login} />\n                <Stack.Screen name=\"Registration\" component={Registration} />\n              </>\n            )}\n          </Stack.Navigator>\n      </CurrentUserProvider>\n    );\n  }\n}\n\nexport default AppNavigator;\n"]},"metadata":{},"sourceType":"module"}